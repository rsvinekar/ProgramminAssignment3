setwd("/Users/rsvinekar/Desktop/Coursera/R-prog/UCIDataset")
dir()
read.csv("test/X_test.txt",header=FALSE)
?read.csv
test_X <- read.csv("test/X_test.txt",header=FALSE,colClasses = "numeric")
test_X <- read.csv("test/X_test.txt",header=FALSE)
str(test_X)
test_X <- read.table("test/X_test.txt",sep=" ", header=FALSE)
str(test_X)
test_X <- read.table("test/X_test.txt",sep="", header=FALSE)
test_X
str(test_X)
features <- read.table("features.txt")
features
feature_vector <- features[[,2]]
features[,2]
features[[,2]]
features[,2]
library(tidyverse)
?pull
pull(features,2)
as.vector(pull(features,2))
dfnames <- as.vector(pull(features,2))
?gsub
gsub("(",".",dfnames)
gsub("\(",".",dfnames)
gsub("\\(",".",dfnames)
gsub("\\)",".",dfnames)
dfnames <- gsub("\\(",".",dfnames)
dfnames <- gsub("\\)",".",dfnames)
dfnames <- gsub("-","_",dfnames)
dfnames
dfnames <- gsub(",","_.",dfnames)
dfnames
features <- read.table("features.txt")
class(features)
features[,2]
class(features[,2])
feature_labels <- features[,2]
feature_labels %>% gsub("\\)","_")
gsub(feature_labels"\\)","_")
gsub(feature_labels,"\\)","_")
gsub(feature_labels,"\\)","_")
gsub("\\)","_",feature_labels)
feature_labels <- features[,2]
gsub("\\)","._",feature_labels)
gsub("\\(","_.",feature_labels)
gsub("-)","__",feature_labels)
feature_labels <- gsub("\\)","._",feature_labels)
feature_labels <- gsub("\\(","_.",feature_labels)
feature_labels <- gsub("-)","__",feature_labels)
feature_labels
feature_labels <- gsub("-","__",feature_labels)
feature_labels <- gsub(",",".",feature_labels)
feature_labels
feature_labels <- features[,2] ## get it as a character vector
feature_labels
feature_labels <- gsub("\\(\\)","_O_",feature_labels)
feature_labels <- gsub("\\(","_C_",feature_labels)
feature_labels <- gsub("\\)","_D_",feature_labels)
feature_labels <- gsub("-","_",feature_labels)
feature_labels <- gsub(",",".comma.",feature_labels)
feature_labels
feature_labels <- features[,2] ## get it as a character vector
feature_labels <- gsub("\\(\\)","_func_",feature_labels)
feature_labels <- gsub("\\(","_bet_",feature_labels)
feature_labels <- gsub("\\)","_._",feature_labels)
feature_labels <- gsub("-","_",feature_labels)
feature_labels <- gsub(",","_and_",feature_labels)
feature_labels
feature_labels <- features[,2] ## get it as a character vector
feature_labels
feature_labels <- gsub("\\(\\)",".fnc.",feature_labels)
feature_labels <- gsub("\\(",".opn.",feature_labels)
feature_labels <- gsub("\\)",".cls.",feature_labels)
feature_labels <- gsub("-","_",feature_labels)
feature_labels <- gsub(",",".n.",feature_labels)
feature_labels
feature_labels <- features[,2] ## get it as a character vector
feature_labels <- gsub("\\(\\)",".O.",feature_labels)
feature_labels <- gsub("\\(",".C.",feature_labels)
feature_labels <- gsub("\\)",".D.",feature_labels)
feature_labels <- gsub("-","_",feature_labels)
feature_labels <- gsub(",",".N.",feature_labels)
feature_labels
feature_labels <- features[,2] ## get it as a character vector
feature_labels <- gsub("\\(\\)",".func.",feature_labels)
feature_labels <- gsub("\\(",".bet.",feature_labels)
feature_labels <- gsub("\\)",".ok.",feature_labels)
feature_labels <- gsub("-","_",feature_labels)
feature_labels <- gsub(",",".and.",feature_labels)
feature_labels
test_X <- read.table("test/X_test.txt",sep="", header=FALSE)
names(test_X) <- feature_labels
test_Y <- read.table("test/Y_test.txt",sep="", header=FALSE)
names(test_Y)=c("Y")
test_X %>%
mutate(datatype="test") %>%
cbind(test_Y)
test_X
str(test_X)
mutate(test_X,datatype = "test")
mutate(test_X,set_name = "test")
duplicated(feature_labels)
feature_labels(duplicated(feature_labels))
feature_labels[duplicated(feature_labels)]
features[duplicated(features)]
features[duplicated(features[,2]),]
distinct(feature_labels)
feature_labels[duplicated(feature_labels)]
feature_labels["fBodyGyro_bandsEnergy.func._33.and.48"]
feature_labels[feature_labels=="fBodyGyro_bandsEnergy.func._33.and.48"]
features[duplicated(features[,2]),]
features[features[,2]=="fBodyGyro-bandsEnergy()-17,32",]
feature_labels <- paste(features[,1],features[,2])
feature_labels
feature_labels <- gsub("\\(\\)",".func.",feature_labels)
feature_labels <- gsub("\\(",".bet.",feature_labels)
feature_labels <- gsub("\\)",".ok.",feature_labels)
feature_labels <- gsub("-","_",feature_labels)
feature_labels <- gsub(",",".and.",feature_labels)
feature_labels
test_X %>%
mutate(datatype="test") %>%
cbind(test_Y)
test_X <- read.table("test/X_test.txt",sep="", header=FALSE)
names(test_X) <- feature_labels
test_X %>%
mutate(datatype="test") %>%
cbind(test_Y)
?merge
names(test_X)
str(test_X)
activity_labels <- read.table("activity_labels.txt")
test_act <- read.table("test/subject_test.txt",sep="", header=FALSE)
merge(test_act,activity_labels)
test_act
test_act <- merge(test_act,activity_labels)
test_X %>%
mutate(datatype="test") %>%
cbind(test_Y)
cbind(test_act[,2])
test_X
str(test_X)
tail(str(test_X))
test_act
names(test_act)=c("number","Activity")
test_X %>%
mutate(datatype="test") %>%
cbind(test_Y)
cbind(test_act[,2])
View(test_Y)
ls()
rm(ls())
source("~/Desktop/Coursera/R-prog/UCIDataset/test.R")
test_X$Activity
test_Y
mutate(test_X,datatype="test")
text_X
test_X
?mutate
test_X <- mutate(test_X,datatype="test")
test_X
test_X <- cbind(test_X,test_Y)
test_X <- cbind(test_X,test_act[,2])
test_act[,2]
test_X <- cbind(test_X,test_act[,2])
dim(test_X)
source("~/Desktop/Coursera/R-prog/UCIDataset/test.R")
test_X <- read.table("test/X_test.txt",sep="", header=FALSE)
test_act <- read.table("test/subject_test.txt",sep="", header=FALSE)
names(test_X) <- feature_labels
test_act <- merge(test_act,activity_labels)
names(test_act)=c("number","Activity")
test_Y <- read.table("test/Y_test.txt",sep="", header=FALSE)
names(test_Y)=c("Y")
dim(test_X)
dim(test_act)
dim(test_Y)
source("~/Desktop/Coursera/R-prog/UCIDataset/test.R")
dim(test_act)
source("~/Desktop/Coursera/R-prog/UCIDataset/test.R")
source("~/Desktop/Coursera/R-prog/UCIDataset/test.R")
dim(test_X)
test_X[2944:2947,561:564]
?cbind
source("~/Desktop/Coursera/R-prog/UCIDataset/test.R")
test_X[2944:2947,561:564]
source("~/Desktop/Coursera/R-prog/UCIDataset/test.R")
test_X[2944:2947,561:564]
source("~/Desktop/Coursera/R-prog/UCIDataset/test.R")
train_X
composite <- rbind(test_X,train_X)
dim(composite)
source("~/Desktop/Coursera/R-prog/UCIDataset/test.R")
setwd("/Users/rsvinekar/Desktop/Coursera/git/ProgrammingAssignment3")
setwd("/Users/rsvinekar/Documents/GitHub/ProgramminAssignment3")
source("~/Documents/GitHub/ProgramminAssignment3/read_data.R")
composite
composite[composite$Dataset=="train"]
composite$Dataset
get_folder_data("train")
train
composite <- rbind(test,train)
composite$Dataset
tail(composite$Dataset)
source("~/Documents/GitHub/ProgramminAssignment3/read_data.R")
tail(composite$Dataset)
tail(composite)
duplicated(conposite)
duplicated(composite)
duplicated(names(composite))
source("~/Documents/GitHub/ProgramminAssignment3/read_data.R")
duplicated(names(composite))
names(composite)
source("~/Documents/GitHub/ProgramminAssignment3/read_data.R")
names(composite)
source("~/Documents/GitHub/ProgramminAssignment3/read_data.R")
names(composite)
source("~/Documents/GitHub/ProgramminAssignment3/read_data.R")
names(composite)
source("~/Documents/GitHub/ProgramminAssignment3/read_data.R")
names(composite)
source("~/Documents/GitHub/ProgramminAssignment3/read_data.R")
names(composite)
source("~/Documents/GitHub/ProgramminAssignment3/read_data.R")
source("~/Documents/GitHub/ProgramminAssignment3/read_data.R")
source("~/Documents/GitHub/ProgramminAssignment3/read_data.R")
source("~/Documents/GitHub/ProgramminAssignment3/read_data.R")
names(composite)
duplicated(names(composite))
composite[,duplicated(names(composite))]
composite$fBodyGyro_bandsEnergy_49.and.64
test <- composite$fBodyGyro_bandsEnergy_49.and.64
test
distinct(composite)
source("~/Documents/GitHub/ProgramminAssignment3/read_data.R")
distinct(composite)
distinct(composite, .keep_all = TRUE)
test <- distinct(composite, .keep_all = TRUE)
dim(test)
source("~/Documents/GitHub/ProgramminAssignment3/read_data.R")
distinct(composite, .keep_all = TRUE)
source("~/Documents/GitHub/ProgramminAssignment3/read_data.R")
source("~/Documents/GitHub/ProgramminAssignment3/read_data.R")
source("~/Documents/GitHub/ProgramminAssignment3/read_data.R")
source("~/Documents/GitHub/ProgramminAssignment3/read_data.R")
source("~/Documents/GitHub/ProgramminAssignment3/read_data.R")
source("~/Documents/GitHub/ProgramminAssignment3/read_data.R")
source("~/Documents/GitHub/ProgramminAssignment3/read_data.R")
source("~/Documents/GitHub/ProgramminAssignment3/read_data.R")
source("~/Documents/GitHub/ProgramminAssignment3/read_data.R")
source("~/Documents/GitHub/ProgramminAssignment3/read_data.R")
source("~/Documents/GitHub/ProgramminAssignment3/read_data.R")
source("~/Documents/GitHub/ProgramminAssignment3/read_data.R")
source("~/Documents/GitHub/ProgramminAssignment3/read_data.R")
source("~/Documents/GitHub/ProgramminAssignment3/read_data.R")
source("~/Documents/GitHub/ProgramminAssignment3/read_data.R")
source("~/Documents/GitHub/ProgramminAssignment3/read_data.R")
source("~/Documents/GitHub/ProgramminAssignment3/read_data.R")
source("~/Documents/GitHub/ProgramminAssignment3/read_data.R")
source("~/Documents/GitHub/ProgramminAssignment3/read_data.R")
source("~/Documents/GitHub/ProgramminAssignment3/read_data.R")
source("~/Documents/GitHub/ProgramminAssignment3/read_data.R")
source("~/Documents/GitHub/ProgramminAssignment3/read_data.R")
composite$Dataset
knitr::opts_chunk$set(echo = TRUE)
feature_labels <- get_feature_labels(filename = "features.txt")
feature_labels <- get_feature_labels(filename = "features.txt")
feature_labels <- get_feature_labels(filename = "features_edited.txt")
activity_labels <- get_activity_labels(filename="activity_labels.txt")
test <- get_folder_data("test")
feature_labels <- get_feature_labels(filename = "features_edited.txt")
activity_labels <- get_activity_labels(filename="activity_labels.txt")
test <- get_folder_data("test")
?str_replace
feature_labels
source("~/Documents/GitHub/ProgramminAssignment3/read_data.R")
source("~/Documents/GitHub/ProgramminAssignment3/read_data.R")
composite %<% group_by(Subject)
composite %>% group_by(Subject)
composite %>% group_by(Subject) %>% mean()
composite %>% group_by(Subject) %>% summarise_all(mean)
})
composite %>% group_by(Subject) %>% summarise_all(mean)
warnings()
composite %>% group_by(Subject) %>% summarise_all(mean)
composite %>% group_by(Activity) %>% summarise_all(mean)
composite %>% group_by(Activity) %>% summarise(across(where(is.numeric), mean)
)
composite %>% group_by(Subject) %>% summarise(across(where(is.numeric), mean)
)
composite %>% group_by(Subject) %>% summarise(across(where(is.numeric), mean))
source("~/Documents/GitHub/ProgramminAssignment3/read_data.R")
source("~/Documents/GitHub/ProgramminAssignment3/read_data.R")
composite %>% group_by(Subject,Activity) %>% summarise(across(where(is.numeric), mean))
source("~/Documents/GitHub/ProgramminAssignment3/read_data.R")
groupings
dim(groupings)
groupings
composite %>% group_by(Subject,Activity) %>% summarise(across(where(is.numeric), mean))
source("~/Documents/GitHub/ProgramminAssignment3/read_data.R")
str_detect(names(composite),'_mean')
Var_mean <- str_detect(names(composite),'_mean')
Var_std <- str_detect(names(composite),'_std')
Var_std | Var_mean
std_mean <- Var_std | Var_mean
composite[,std_mean]
mean_std_comp <- composite[,std_mean]
mean_std_comp %>% group_by(Subject,Activity) %>% summarise(across(where(is.numeric), mean))
mean_std_comp <- cbind(mean_std_comp,composite$Subject,composite$Activity)
mean_std_comp %>% group_by(Subject,Activity) %>% summarise(across(where(is.numeric), mean))
mean_std_comp
mean_std_comp <- cbind(mean_std_comp,Subject=composite$Subject,Activity=composite$Activity)
mean_std_comp
mean_std_comp %>% group_by(Subject,Activity) %>% summarise(across(where(is.numeric), mean))
mean_std_comp <- cbind(mean_std_comp,Subject=composite$Subject,Activity=composite$Activity)
mean_std_comp <- composite[,std_mean]
mean_std_comp <- cbind(mean_std_comp,Subject=composite$Subject,Activity=composite$Activity)
mean_std_comp %>% group_by(Subject,Activity) %>% summarise(across(where(is.numeric), mean))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
get_feature_labels <- function(filename = "features.txt"){
features <- read.table(filename)
feature_labels <- features[,2]
feature_labels <- gsub("\\(\\)","",feature_labels)
feature_labels <- gsub("\\(",".between.",feature_labels)
feature_labels <- gsub("\\)","",feature_labels)
feature_labels <- gsub("-","_",feature_labels)
feature_labels <- gsub(",",".and.",feature_labels)
feature_labels
}
## Read the activity file for activity descriptions
get_activity_labels <- function(filename="activity_labels.txt"){
activity_labels <- read.table(filename)
names(activity_labels)=c("ActID","Activity")
activity_labels
}
## Read files from the required test or train folder
get_folder_data <- function(
name,
features=feature_labels,
activities=activity_labels
) {
#Optional - spout warning if name is not test or train
if ( name !="test" & name != "train"){
stop(paste("name should be \"test\" or \"train\", not \"",name,"\"", sep=""))
}
# construct file names - it (i.e. name) is either test or train
X_file = paste(name,"/X_",name,".txt")
Y_file = paste(name,"/Y_",name,".txt")
subject_file = paste(name,"/subject_",name,".txt")
## Open and read the files
X <- read.table("test/X_test.txt",sep="", header=FALSE)
Y <- read.table("test/Y_test.txt",sep="", header=FALSE)
subject <- read.table("test/subject_test.txt",sep="", header=FALSE)
## Label them properly
names(X) <- features
names(subject)=c("Subject")
names(Y)=c("ActID")
## the activities like SITTING etc. are entered as numbers, so we merge them
## "ActId" common variable allows for merging
Y <- merge(Y,activities) # indicates source from test or training set
X <- mutate(X,Dataset=name) # Duplicate entries cause this command to fail
X <- cbind(X,Activity=Y[,2],stringsAsFactors = TRUE)
## Uses descriptive activity names
X <- cbind(X,Subject=subject) # Merge Y and the subject comprehensive dataset
## return X
X
}
feature_labels <- get_feature_labels(filename = "features_edited.txt")
activity_labels <- get_activity_labels(filename="activity_labels.txt")
test <- get_folder_data("test")
train <- get_folder_data("train")
composite <- rbind(test,train)
names(composite)
cbind(mean_std,composite[,562:564])
Var_std <- str_detect(names(composite),'_std')
Var_mean <- str_detect(names(composite),'_mean')
mean_std <- Var_mean | Var_std
cbind(mean_std,composite[,562:564])
cbind(mean_std,composite[562:564,])
mean_std
mean_std[562:564]<-TRUE
Var_std <- str_detect(names(composite),'_std')
Var_mean <- str_detect(names(composite),'_mean')
mean_std <- Var_mean | Var_std
mean_std[562:564] <- TRUE
mean_std_only <- composite[,mean_std]
Var_std <- str_detect(names(composite),'_std')
Var_mean <- str_detect(names(composite),'_mean')
mean_std <- Var_mean | Var_std
mean_std[562:564] <- TRUE
mean_std_only <- composite[,mean_std]
mean_std_only
mean_std_only %>% group_by(Subject,Activity) %>% summarise(across(where(is.numeric), mean))
activity_subject <- mean_std_only %>% group_by(Subject,Activity) %>% summarise(across(where(is.numeric), mean))
Var_std <- str_detect(names(composite),'_std')
Var_mean <- str_detect(names(composite),'_mean')
mean_std <- Var_mean | Var_std
mean_std[562:564] <- TRUE
mean_std_only <- composite[,mean_std]
mean_std_only
activity_subject <- mean_std_only %>% group_by(Subject,Activity) %>% summarise(across(where(is.numeric), mean))
activity_subject
?write.csv
names(composite)
write.table(composite,"composite_dataset.tab",sep="\t")
activity_subject <- mean_std_only %>% group_by(Subject,Activity) %>% summarise(across(where(is.numeric), mean))
activity_subject
write.table(activity_subject,"activity_subject_dataset.tab",sep="\t", row.names=FALSE)
Var_std <- str_detect(names(composite),'_std') #all standard deviations
Var_mean <- str_detect(names(composite),'_mean') #mean and meanFreq
mean_std <- Var_mean | Var_std
mean_std[562:564] <- TRUE # We need Activity, Subject, Dataset, our extra cols
mean_std_only <- composite[,mean_std]
names(mean_std_only)
write.table(mean_std_only,"mean_std_dataset.tab",sep="\t", row.names=FALSE)
library(knitr)
purl("CodeBook.Rmd")
?purl
purl("CodeBook.Rmd", documentation=2)
purl("CodeBook.Rmd", output="run_analysis.R")
purl("CodeBook.Rmd", output="run_analysis.R")
purl("CodeBook.Rmd", output="run_analysis.R")
purl("CodeBook.Rmd", output="run_analysis.R")
purl("CodeBook.Rmd", output="run_analysis.R")
purl("CodeBook.Rmd", output="run_analysis.R")
purl("CodeBook.Rmd", output="run_analysis.R")
purl("CodeBook.Rmd", output="run_analysis.R")
